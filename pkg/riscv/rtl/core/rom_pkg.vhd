--! \file rom_pkg.vhd
--! \author Charles Ancheta
--! @cond Doxygen_Suppress
library ieee;
use ieee.std_logic_1164.all;
use work.fysh_fyve.all;
--! @endcond

--! Autogenerated package containing the ROM.\n
package rom is
  constant rom_arr : mem_t (0 to ROM_NUM_WORDS-1) := (
    x"37210100",
    x"ef00402e",
    x"63000000",
    x"6b050000",
    x"67800000",
    x"b7050000",
    x"83a5c53c",
    x"83a50500",
    x"33d5a500",
    x"13751500",
    x"67800000",
    x"37050000",
    x"0325c53c",
    x"03250500",
    x"67800000",
    x"b7050000",
    x"83a5c53c",
    x"23a0a500",
    x"67800000",
    x"37060000",
    x"0326863c",
    x"83260600",
    x"13071000",
    x"3315a700",
    x"63880500",
    x"33e5a600",
    x"2320a600",
    x"67800000",
    x"1345f5ff",
    x"33f5a600",
    x"2320a600",
    x"67800000",
    x"37060000",
    x"0326c63c",
    x"83260600",
    x"13071000",
    x"3315a700",
    x"63880500",
    x"33e5a600",
    x"2320a600",
    x"67800000",
    x"1345f5ff",
    x"33f5a600",
    x"2320a600",
    x"67800000",
    x"130101fd",
    x"23261102",
    x"23248102",
    x"23229102",
    x"23202103",
    x"232e3101",
    x"232c4101",
    x"232a5101",
    x"23286101",
    x"23267101",
    x"23248101",
    x"23229101",
    x"2320a101",
    x"13840500",
    x"93040500",
    x"13094500",
    x"13054000",
    x"b309b540",
    x"13055000",
    x"330ab540",
    x"13057000",
    x"b30ab540",
    x"138b5400",
    x"13053000",
    x"b30bb540",
    x"13056000",
    x"330cb540",
    x"938c6400",
    x"130d4006",
    x"13850400",
    x"93050400",
    x"ef00c010",
    x"13050900",
    x"93850900",
    x"ef00400c",
    x"13050900",
    x"93050a00",
    x"ef00800b",
    x"13050900",
    x"93850a00",
    x"ef00c00a",
    x"13050b00",
    x"93850b00",
    x"ef00000a",
    x"13050b00",
    x"93050c00",
    x"ef004009",
    x"13850c00",
    x"93850900",
    x"ef008008",
    x"13850c00",
    x"93050a00",
    x"ef00c007",
    x"13850c00",
    x"93850a00",
    x"ef000007",
    x"130dfdff",
    x"e3180df8",
    x"8320c102",
    x"03248102",
    x"83244102",
    x"03290102",
    x"8329c101",
    x"032a8101",
    x"832a4101",
    x"032b0101",
    x"832bc100",
    x"032c8100",
    x"832c4100",
    x"032d0100",
    x"13010103",
    x"67800000",
    x"13060000",
    x"63000502",
    x"9316f501",
    x"93d6f641",
    x"b3f6b600",
    x"3386c600",
    x"13551500",
    x"93951500",
    x"e31405fe",
    x"13050600",
    x"67800000",
    x"130101ff",
    x"23261100",
    x"23248100",
    x"1315d501",
    x"1355a501",
    x"93f57500",
    x"33e5a500",
    x"13040508",
    x"13050400",
    x"eff09fe1",
    x"13050400",
    x"8320c100",
    x"03248100",
    x"13010101",
    x"67800000",
    x"130101fe",
    x"232e1100",
    x"232c8100",
    x"232a9100",
    x"23282101",
    x"23263101",
    x"23244101",
    x"13840500",
    x"93040500",
    x"eff01ffa",
    x"13092400",
    x"13850400",
    x"93050900",
    x"eff01ff9",
    x"93093400",
    x"13850400",
    x"93850900",
    x"eff01ff8",
    x"138a1400",
    x"93051400",
    x"13050a00",
    x"eff01ff7",
    x"93054400",
    x"13050a00",
    x"eff05ff6",
    x"93842400",
    x"13850400",
    x"93050400",
    x"eff05ff5",
    x"13850400",
    x"93050900",
    x"eff09ff4",
    x"13850400",
    x"93850900",
    x"eff0dff3",
    x"8320c101",
    x"03248101",
    x"83244101",
    x"03290101",
    x"8329c100",
    x"032a8100",
    x"13010102",
    x"67800000",
    x"130101ff",
    x"23261100",
    x"13051000",
    x"93050000",
    x"eff0dfdb",
    x"13051000",
    x"93051000",
    x"eff01fdb",
    x"13051000",
    x"93052000",
    x"eff05fda",
    x"13051000",
    x"93053000",
    x"eff09fd9",
    x"13051000",
    x"93054000",
    x"eff0dfd8",
    x"13051000",
    x"93055000",
    x"eff01fd8",
    x"13051000",
    x"93056000",
    x"eff05fd7",
    x"13051000",
    x"93057000",
    x"eff09fd6",
    x"6ff01ffa",
    x"10000000",
    x"00000000",
    x"017a5200",
    x"017c0101",
    x"1b0c0200",
    x"18000000",
    x"18000000",
    x"90feffff",
    x"3c000000",
    x"00440e10",
    x"48810188",
    x"02000000",
    x"20000000",
    x"34000000",
    x"b0feffff",
    x"ac000000",
    x"00440e20",
    x"58810188",
    x"02890392",
    x"04930594",
    x"06000000",
    x"14000000",
    x"58000000",
    x"38ffffff",
    x"6c000000",
    x"00440e10",
    x"44810100",
    x"00000000",
    x"e4beadde",
    x"e8beadde",
    x"efbeadde",
    others => (31 downto 0 => '0')
    );
end package rom;
--! From binary file fysh/simple-matrix.hex
--! 	.text
--! 	.attribute	4, 16
--! 	.attribute	5, "rv32i2p1"
--! 	.file	"simple-matrix.fysh"
--! 	.globl	set_pixel                       # -- Begin function set_pixel
--! 	.p2align	2
--! 	.type	set_pixel,@function
--! set_pixel:                              # @set_pixel
--! 	.cfi_startproc
--! # %bb.0:                                # %entry
--! 	addi	sp, sp, -16
--! 	.cfi_def_cfa_offset 16
--! 	sw	ra, 12(sp)                      # 4-byte Folded Spill
--! 	sw	s0, 8(sp)                       # 4-byte Folded Spill
--! 	.cfi_offset ra, -4
--! 	.cfi_offset s0, -8
--! 	slli	a0, a0, 29
--! 	srli	a0, a0, 26
--! 	andi	a1, a1, 7
--! 	or	a0, a1, a0
--! 	addi	s0, a0, 128
--! 	mv	a0, s0
--! 	call	fysh_gpio_write_all
--! 	mv	a0, s0
--! 	lw	ra, 12(sp)                      # 4-byte Folded Reload
--! 	lw	s0, 8(sp)                       # 4-byte Folded Reload
--! 	addi	sp, sp, 16
--! 	ret
--! .Lfunc_end0:
--! 	.size	set_pixel, .Lfunc_end0-set_pixel
--! 	.cfi_endproc
--!                                         # -- End function
--! 	.globl	draw_fysh                       # -- Begin function draw_fysh
--! 	.p2align	2
--! 	.type	draw_fysh,@function
--! draw_fysh:                              # @draw_fysh
--! 	.cfi_startproc
--! # %bb.0:                                # %entry
--! 	addi	sp, sp, -32
--! 	.cfi_def_cfa_offset 32
--! 	sw	ra, 28(sp)                      # 4-byte Folded Spill
--! 	sw	s0, 24(sp)                      # 4-byte Folded Spill
--! 	sw	s1, 20(sp)                      # 4-byte Folded Spill
--! 	sw	s2, 16(sp)                      # 4-byte Folded Spill
--! 	sw	s3, 12(sp)                      # 4-byte Folded Spill
--! 	sw	s4, 8(sp)                       # 4-byte Folded Spill
--! 	.cfi_offset ra, -4
--! 	.cfi_offset s0, -8
--! 	.cfi_offset s1, -12
--! 	.cfi_offset s2, -16
--! 	.cfi_offset s3, -20
--! 	.cfi_offset s4, -24
--! 	mv	s0, a1
--! 	mv	s1, a0
--! 	call	set_pixel
--! 	addi	s2, s0, 2
--! 	mv	a0, s1
--! 	mv	a1, s2
--! 	call	set_pixel
--! 	addi	s3, s0, 3
--! 	mv	a0, s1
--! 	mv	a1, s3
--! 	call	set_pixel
--! 	addi	s4, s1, 1
--! 	addi	a1, s0, 1
--! 	mv	a0, s4
--! 	call	set_pixel
--! 	addi	a1, s0, 4
--! 	mv	a0, s4
--! 	call	set_pixel
--! 	addi	s1, s1, 2
--! 	mv	a0, s1
--! 	mv	a1, s0
--! 	call	set_pixel
--! 	mv	a0, s1
--! 	mv	a1, s2
--! 	call	set_pixel
--! 	mv	a0, s1
--! 	mv	a1, s3
--! 	call	set_pixel
--! 	lw	ra, 28(sp)                      # 4-byte Folded Reload
--! 	lw	s0, 24(sp)                      # 4-byte Folded Reload
--! 	lw	s1, 20(sp)                      # 4-byte Folded Reload
--! 	lw	s2, 16(sp)                      # 4-byte Folded Reload
--! 	lw	s3, 12(sp)                      # 4-byte Folded Reload
--! 	lw	s4, 8(sp)                       # 4-byte Folded Reload
--! 	addi	sp, sp, 32
--! 	ret
--! .Lfunc_end1:
--! 	.size	draw_fysh, .Lfunc_end1-draw_fysh
--! 	.cfi_endproc
--!                                         # -- End function
--! 	.globl	main                            # -- Begin function main
--! 	.p2align	2
--! 	.type	main,@function
--! main:                                   # @main
--! 	.cfi_startproc
--! # %bb.0:                                # %entry
--! 	addi	sp, sp, -16
--! 	.cfi_def_cfa_offset 16
--! 	sw	ra, 12(sp)                      # 4-byte Folded Spill
--! 	.cfi_offset ra, -4
--! .LBB2_1:                                # %loop_cond
--!                                         # =>This Inner Loop Header: Depth=1
--! 	li	a0, 1
--! 	li	a1, 0
--! 	call	draw_frame
--! 	li	a0, 1
--! 	li	a1, 1
--! 	call	draw_frame
--! 	li	a0, 1
--! 	li	a1, 2
--! 	call	draw_frame
--! 	li	a0, 1
--! 	li	a1, 3
--! 	call	draw_frame
--! 	li	a0, 1
--! 	li	a1, 4
--! 	call	draw_frame
--! 	li	a0, 1
--! 	li	a1, 5
--! 	call	draw_frame
--! 	li	a0, 1
--! 	li	a1, 6
--! 	call	draw_frame
--! 	li	a0, 1
--! 	li	a1, 7
--! 	call	draw_frame
--! 	j	.LBB2_1
--! .Lfunc_end2:
--! 	.size	main, .Lfunc_end2-main
--! 	.cfi_endproc
--!                                         # -- End function
--! 	.section	".note.GNU-stack","",@progbits
--! ></*>
--! Simple 8x8 matrix!
--! C1 - JE1 - gpio[24]
--! C2 - JE2 - gpio[25]
--! C3 - JE3 - gpio[26]
--! R1 - JE4 - gpio[27]
--! R2 - JE5 - gpio[28]
--! R3 - JE6 - gpio[29]
--! EN - JE7 - gpio[30]
--! 
--! Buttons:
--! H - gpio[0]
--! J - gpio[1]
--! K - gpio[2]
--! L - gpio[3]
--! 
--! o x o o x x x x
--! x o x x o x x x
--! o x o o x x x x
--! x x x x x x x x
--! x x x x o o x o
--! x x x o x x o x
--! x x x x o o x o
--! x x x x x x x x
--! 
--! (0,0), (0,2), (0,3), (1,1), (1,4), (2,0), (2,2), (2,3)
--! (4,4), (4,5), (4,7), (5,3), (5,6), (6,4), (6,5), (6,7)
--! <*/><
--! 
--! >(set pixel) ><row> ><col>
--! ><>
--!    (+o  (><{°> << ><{{{°>) | ><//> Output enable
--!         ((><row> & ><{{{°>) << ><{{°>) | ><//> Row is next higher 3 bits
--!         (><col> & ><{{{°>) ~ ><//> Col is first 3 bits
--! <><
--! 
--! >(draw fysh) ><dy> ><dx>
--! ><>
--!    [(><dy> ><(((°>) >(set pixel) (><dx> ><(((°>)] ~ ><//> 0 0
--!    [(><dy> ><(((°>) >(set pixel) (><dx> ><({(°>)] ~ ><//> 0 2
--!    [(><dy> ><(((°>) >(set pixel) (><dx> ><({{°>)] ~ ><//> 0 3
--!    [(><dy> ><(({°>) >(set pixel) (><dx> ><(({°>)] ~ ><//> 1 1
--!    [(><dy> ><(({°>) >(set pixel) (><dx> ><{((°>)] ~ ><//> 1 4
--!    [(><dy> ><({(°>) >(set pixel) (><dx> ><(((°>)] ~ ><//> 2 0
--!    [(><dy> ><({(°>) >(set pixel) (><dx> ><({(°>)] ~ ><//> 2 2
--!    [(><dy> ><({(°>) >(set pixel) (><dx> ><({{°>)] ~ ><//> 2 3
--! <><
--! 
--! ><(((@> [><{°>]
--! ><>
--!    ></*>
--!      `draw frame` is defined in `gpio.c`,
--!      which calls both `set pixel` and `draw fysh`.
--!      This showcases Fysh-C interop.
--!    <*/><
--!    [><(({°> >(draw_frame) ><(((°>] ~
--!    [><(({°> >(draw_frame) ><(({°>] ~
--!    [><(({°> >(draw_frame) ><({(°>] ~
--!    [><(({°> >(draw_frame) ><({{°>] ~
--!    [><(({°> >(draw_frame) ><{((°>] ~
--!    [><(({°> >(draw_frame) ><{({°>] ~
--!    [><(({°> >(draw_frame) ><{{(°>] ~
--!    [><(({°> >(draw_frame) ><{{{°>] ~
--! <><
--! 
--! ><//> we're just being nice to LLVM
--! ><(°> ~
